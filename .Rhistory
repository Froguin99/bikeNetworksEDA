streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
View(streets)
View(wines)
View(wines)
library("kohonen")
data("wines")
wines.sc <- scale(wines)
set.seed(7)
wine.som <- som(wines.sc, grid = somgrid(5, 4, "hexagonal"))
plot(wine.som, main = "Wine data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# import
# get working directory
wd <- getwd()
# get combined street metrics file
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
# read csv file
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
# find ylim
streets.som <- som(streets.sc, grid = somgrid(5, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
data("wines")
wines.sc <- scale(wines)
set.seed(7)
wine.som <- som(wines.sc, grid = somgrid(5, 4, "hexagonal"))
plot(wine.som, main = "Wine data")
View(wines)
View(wines)
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
View(streets)
View(wines)
set.seed(7) # for repoducablity
streets.som <- som(streets.sc, grid = somgrid(5, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
streets.som <- som(streets.sc, grid = somgrid(10, 10, "hexagonal"))
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
streets.som <- som(streets.sc, grid = somgrid(10, 10, "hexagonal"))
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
streets.som <- som(streets.sc, grid = somgrid(10, 6, "hexagonal"))
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
streets.som <- som(streets.sc, grid = somgrid(8, 6, "hexagonal"))
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
streets.som <- som(streets.sc, grid = somgrid(5, 6, "hexagonal"))
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
streets.som <- som(streets.sc, grid = somgrid(5, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
streets.som <- som(streets.sc, grid = somgrid(5, 4, "rectangular"))
plot(streets.som, main = "Streets data")
View(wine.som)
View(streets.som)
View(wines)
plot(streets.som, type = 'mapping' main = "Streets data")
plot(streets.som, type = 'mapping', main = "Streets data")
plot(streets.som, type = 'mapping', col = NA, main = "Streets data")
streets.som <- som(streets.sc, grid = somgrid(6, 4, "hexagonal"))
plot(streets.som, type = 'mapping', main = "Streets data")
plot(streets.som, main = "Streets data")
plot(streets.som)
plot(streets.som)
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
#streets[is.na(streets)] <- 0
#streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
#### train the SOM ####
## define a grid for the SOM and train
streets.som <- som(streets.sc, grid = somgrid(6, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
#### train the SOM ####
## define a grid for the SOM and train
streets.som <- som(streets.sc, grid = somgrid(6, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
#### train the SOM ####
## define a grid for the SOM and train
streets.som <- som(streets.sc, grid = somgrid(6, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
View(streets.sc)
streets.som <- som(streets.sc, grid = somgrid(6, 5, "hexagonal"))
streets.som <- som(streets.sc, grid = somgrid(7, 4, "hexagonal"))
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
#### train the SOM ####
## define a grid for the SOM and train
streets.som <- som(streets.sc, grid = somgrid(7, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
#### train the SOM ####
## define a grid for the SOM and train
streets.som <- som(streets.sc, grid = somgrid(7, 4, "hexagonal"))
plot(streets.som, main = "Streets data")
View(streets)
?som
plot(streets.som, main = "Streets data", type = "counts")
plot(streets.som, main = "Streets data", type = "property", property= getCodes(streets.som)[, 6])
# plot all
plot(streets.som, type = 'codes')
# plot all
plot(streets.som, type = 'codes', codeRendering="segments")
# plot all
plot(streets.som, type = 'codes', codeRendering="star", star etc, heatkey = FALSE) # codeRendering = line, star etc
# plot all
plot(streets.som, type = 'codes', codeRendering="star", heatkey = FALSE)
# plot all
plot(streets.som, type = 'codes', codeRendering="line", heatkey = FALSE)
# plot all
plot(streets.som, type = 'codes', codeRendering="line", heatkey = FALSE)
# plot all
plot(streets.som, type = 'codes', codeRendering="segments", heatkey = FALSE)
View(streets.som)
# plot all
plot(streets.som, type = 'lines', codeRendering="segments", heatkey = FALSE)
# plot all
plot(streets.som, type = 'line', codeRendering="segments", heatkey = FALSE)
# plot all
plot(streets.som, type = 'counts', codeRendering="segments", heatkey = FALSE)
# plot all
plot(streets.som, type = 'counts', codeRendering="segments")
# plot all
plot(streets.som, type = 'quality', codeRendering="segments")
# plot all
plot(streets.som, type = 'mapping', codeRendering="segments")
# plot all
plot(streets.som, type = 'codes', codeRendering="segments")
# plot all
plot(streets.som, type = 'codes', codeRendering="segments", bgcol = "gray")
# plot all
plot(streets.som, type = 'codes', codeRendering="segments", bgcol = "transparent")
# plot all
plot(streets.som, type = 'codes', codeRendering="stars", bgcol = "transparent")
# plot all
plot(streets.som, type = 'codes', codeRendering="segments", bgcol = "transparent", border = TRUE)
streets.som <- som(streets.sc, grid = somgrid(6, 4, topo =  "hexagonal"), toroidal = TRUE)
# this script aims to implment the data aquired in scripts 00 and 01
# into self-organising maps in order to classify cities into groups
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
#?som to get help guide
#### train the SOM ####
## define a grid for the SOM and train
streets.som <- som(streets.sc, grid = somgrid(6, 4, topo =  "hexagonal"), toroidal = TRUE)
plot(streets.som, main = "Streets data", type = "counts")
plot(streets.som, main = "Streets data", type = "property", property= getCodes(streets.som)[, 6])
# plot all
plot(streets.som, type = 'codes', codeRendering="segments", bgcol = "transparent", border = TRUE)
# codeRendering = line, star etc
# libary imports
library(tidyverse)
library(kohonen)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
streets.sc <- scale(streets) # rescale?
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
streets.som <- som(streets.sc, grid = somgrid(6, 4, topo =  "hexagonal"), toroidal = TRUE)
streets.som <- som(streets.sc, grid = somgrid(6, 4, topo =  "hexagonal"))
plot(streets.som, main = "Streets data", type = "counts")
plot(streets.som, main = "Streets data", type = "property", property= getCodes(streets.som)[, 6])
# plot all
plot(streets.som, type = 'codes', codeRendering="segments", bgcol = "transparent", border = TRUE)
library(ggcorrplot)
# install package
#install.packages('kohonen')
#install.packages('tidyverse')
install.packages('ggcorrplot')
install.packages("ggcorrplot")
library(ggcorrplot)
# get working directory and read in file
wd <- getwd()
file <- paste(wd,"Data/Combined_Places/combined_places.csv", sep ='/')
streets <- read.csv(file)
# set place names as row names
rownames(streets) <- streets$place
streets$place <- NULL # remove original data frame
# set as matrix
streets = as.matrix(streets)
# rescale?
streets.sc <- scale(streets)
# change NANs to 0
streets[is.na(streets)] <- 0
streets.sc[is.na(streets.sc)] <- 0
set.seed(7) # for repoducablity
ggcorrplot(cor(streets))
ggcorrplot(cor(streets), method = c("circle"))
ggcorrplot(cor(streets), method = c("square"))
ggcorrplot(cor(streets), method = c("square"), lab = FALSE)
ggcorrplot(cor(streets), method = c("square"), lab_size = 2)
ggcorrplot(cor(streets), method = c("square"), hc.order = TRUE)
ggcorrplot(cor(streets.sc), method = c("square"), )
ggcorrplot(cor(streets), method = c("square"), )
ggcorrplot(cor(streets), method = c("square"), tl.cex = 1 )
ggcorrplot(cor(streets), method = c("square"), tl.cex = 2 )
ggcorrplot(cor(streets), method = c("square"), tl.cex = 4 )
ggcorrplot(cor(streets), method = c("square"), tl.cex = 5 )
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5,
tl.srt = 30)
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5,
tl.srt = 45)
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5,
tl.srt = 60)
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5, # text size
tl.srt = 60, # text rotation
p.mat = p.mat, hc.order = TRUE, type = "lower", insig = "blank"
)
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5, # text size
tl.srt = 60, # text rotation
)
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5, # text size
tl.srt = 60, # text rotation
lab = TRUE)
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5, # text size
tl.srt = 60, # text rotation
)
ggcorrplot(cor(streets),
method = c("square"),
tl.cex = 5, # text size
tl.srt = 60, # text rotation
title = "Combined street network metric correlation plot")
